/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 登录 */
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 注册 */
        post: operations["AuthController_register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取账户资料 */
        get: operations["AccountController_profile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 账户登出 */
        get: operations["AccountController_logout"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/menus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取菜单列表 */
        get: operations["AccountController_menu"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取权限列表 */
        get: operations["AccountController_permissions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 更改账户资料 */
        put: operations["AccountController_update"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 更改账户密码 */
        post: operations["AccountController_password"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取用户列表 */
        get: operations["UserController_list"];
        put?: never;
        /** 新增用户 */
        post: operations["UserController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询用户 */
        get: operations["UserController_read"];
        /** 更新用户 */
        put: operations["UserController_update"];
        post?: never;
        /** 删除用户 */
        delete: operations["UserController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/users/{id}/password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 更改用户密码 */
        post: operations["UserController_password"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取角色列表 */
        get: operations["RoleController_list"];
        put?: never;
        /** 新增角色 */
        post: operations["RoleController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/roles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取角色信息 */
        get: operations["RoleController_info"];
        /** 更新角色 */
        put: operations["RoleController_update"];
        post?: never;
        /** 删除角色 */
        delete: operations["RoleController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/menus/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有菜单列表 */
        get: operations["MenuController_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/menus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有菜单列表 */
        get: operations["MenuController_page"];
        put?: never;
        /** 新增菜单或权限 */
        post: operations["MenuController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/menus/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取菜单或权限信息 */
        get: operations["MenuController_info"];
        /** 更新菜单或权限 */
        put: operations["MenuController_update"];
        post?: never;
        /** 删除菜单或权限 */
        delete: operations["MenuController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/menus/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取后端定义的所有权限集 */
        get: operations["MenuController_getPermissions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/log/login/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询登录日志列表 */
        get: operations["LogController_loginLogPage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/depts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取部门列表 */
        get: operations["DeptController_list"];
        put?: never;
        /** 创建部门 */
        post: operations["DeptController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/depts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询部门信息 */
        get: operations["DeptController_info"];
        /** 更新部门 */
        put: operations["DeptController_update"];
        post?: never;
        /** 删除部门 */
        delete: operations["DeptController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/dict-type": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取字典类型列表 */
        get: operations["DictTypeController_list"];
        put?: never;
        /** 新增字典类型 */
        post: operations["DictTypeController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/dict-type/select-options": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 一次性获取所有的字典类型(不分页) */
        get: operations["DictTypeController_getAll"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/dict-type/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询字典类型信息 */
        get: operations["DictTypeController_info"];
        put?: never;
        /** 更新字典类型 */
        post: operations["DictTypeController_update"];
        /** 删除指定的字典类型 */
        delete: operations["DictTypeController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/dict-item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取字典项列表 */
        get: operations["DictItemController_list"];
        put?: never;
        /** 新增字典项 */
        post: operations["DictItemController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/dict-item/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询字典项信息 */
        get: operations["DictItemController_info"];
        put?: never;
        /** 更新字典项 */
        post: operations["DictItemController_update"];
        /** 删除指定的字典项 */
        delete: operations["DictItemController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/online/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询当前在线用户 */
        get: operations["OnlineController_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/online/kick": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 下线指定在线用户 */
        post: operations["OnlineController_kick"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sse/{uid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 服务端推送消息 */
        get: operations["SseController_sse"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/system/serve/stat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取服务器运行信息 */
        get: operations["ServeController_stat"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/supplier": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取供应商列表 */
        get: operations["SupplierController_list"];
        put?: never;
        /** 新增供应商 */
        post: operations["SupplierController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/supplier/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询供应商 */
        get: operations["SupplierController_info"];
        put?: never;
        /** 更新供应商 */
        post: operations["SupplierController_update"];
        /** 删除供应商 */
        delete: operations["SupplierController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/customer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取客户列表 */
        get: operations["CustomerController_list"];
        put?: never;
        /** 新增客户 */
        post: operations["CustomerController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/customer/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询客户 */
        get: operations["CustomerController_info"];
        put?: never;
        /** 更新客户 */
        post: operations["CustomerController_update"];
        /** 删除客户 */
        delete: operations["CustomerController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/employee": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取员工列表 */
        get: operations["EmployeeController_list"];
        put?: never;
        /** 新增员工 */
        post: operations["EmployeeController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/employee/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询员工 */
        get: operations["EmployeeController_info"];
        put?: never;
        /** 更新员工 */
        post: operations["EmployeeController_update"];
        /** 删除员工 */
        delete: operations["EmployeeController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/material": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取客户列表 */
        get: operations["MaterialController_list"];
        put?: never;
        /** 新增客户 */
        post: operations["MaterialController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relationship/material/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询客户 */
        get: operations["MaterialController_info"];
        put?: never;
        /** 更新客户 */
        post: operations["MaterialController_update"];
        /** 删除客户 */
        delete: operations["MaterialController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/tools/storage/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取本地存储列表 */
        get: operations["StorageController_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/tools/storage/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 删除文件 */
        post: operations["StorageController_delete"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/tools/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 上传 */
        post: operations["UploadController_upload"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/health/network": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["HealthController_checkNetwork"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/health/memory-heap": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["HealthController_checkMemoryHeap"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/health/memory-rss": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["HealthController_checkMemoryRSS"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/health/disk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["HealthController_checkDisk"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取文件列表 */
        get: operations["NetDiskManageController_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/mkdir": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 创建文件夹，支持多级 */
        post: operations["NetDiskManageController_mkdir"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取上传Token，无Token前端无法上传 */
        get: operations["NetDiskManageController_token"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取文件详细信息 */
        get: operations["NetDiskManageController_info"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/mark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 添加文件备注 */
        post: operations["NetDiskManageController_mark"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/download": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取下载链接，不支持下载文件夹 */
        get: operations["NetDiskManageController_download"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/rename": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 重命名文件或文件夹 */
        post: operations["NetDiskManageController_rename"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 删除文件或文件夹 */
        post: operations["NetDiskManageController_delete"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/cut": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 剪切文件或文件夹，支持批量 */
        post: operations["NetDiskManageController_cut"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/manage/copy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 复制文件或文件夹，支持批量 */
        post: operations["NetDiskManageController_copy"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/netdisk/overview/desc": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取网盘空间数据统计 */
        get: operations["NetDiskOverviewController_space"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/io-order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取收发单列表 */
        get: operations["IoOrderController_list"];
        put?: never;
        /** 新增收发单 */
        post: operations["IoOrderController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/io-order/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询收发单 */
        get: operations["IoOrderController_info"];
        put?: never;
        /** 更新收发单 */
        post: operations["IoOrderController_update"];
        /** 删除收发单 */
        delete: operations["IoOrderController_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        LoginToken: {
            /** @description JWT身份Token */
            token: string;
        };
        LoginDto: {
            /** @description 手机号/邮箱 */
            username: string;
            /**
             * @description 密码
             * @example 123456
             */
            password: string;
        };
        RegisterDto: {
            /** @description 账号 */
            username: string;
            /** @description 密码 */
            password: string;
            /** @description 语言 */
            lang: string;
        };
        AccountInfo: {
            /** @description 用户名 */
            username: string;
            /** @description 昵称 */
            nickname: string;
            /** @description 手机号 */
            phone: string;
            /** @description 备注 */
            remark: string;
            /** @description 头像 */
            avatar: string;
        };
        String: Record<string, never>;
        AccountUpdateDto: {
            /** @description 用户呢称 */
            nickname: string;
            /** @description 用户邮箱 */
            email: string;
            /** @description 用户QQ */
            qq: string;
            /** @description 用户手机号 */
            phone: string;
            /** @description 用户头像 */
            avatar: string;
            /** @description 用户备注 */
            remark: string;
        };
        PasswordUpdateDto: {
            /** @description 旧密码 */
            oldPassword: string;
            /** @description 新密码 */
            newPassword: string;
        };
        UserDto: {
            /** @description 头像 */
            avatar?: string;
            /**
             * @description 登录账号
             * @example admin
             */
            username: string;
            /**
             * @description 登录密码
             * @example a123456
             */
            password: string;
            /** @description 归属角色 */
            roleIds: number[];
            /** @description 归属大区 */
            deptId?: number;
            /**
             * @description 呢称
             * @example admin
             */
            nickname: string;
            /**
             * @description 邮箱
             * @example bqy.dev@qq.com
             */
            email: string;
            /** @description 手机号 */
            phone?: string;
            /** @description QQ */
            qq?: string;
            /** @description 备注 */
            remark?: string;
            /**
             * @description 状态
             * @enum {number}
             */
            status: 0 | 1;
        };
        UserUpdateDto: {
            /** @description 头像 */
            avatar?: string;
            /**
             * @description 登录账号
             * @example admin
             */
            username?: string;
            /**
             * @description 登录密码
             * @example a123456
             */
            password?: string;
            /** @description 归属角色 */
            roleIds?: number[];
            /** @description 归属大区 */
            deptId?: number;
            /**
             * @description 呢称
             * @example admin
             */
            nickname?: string;
            /**
             * @description 邮箱
             * @example bqy.dev@qq.com
             */
            email?: string;
            /** @description 手机号 */
            phone?: string;
            /** @description QQ */
            qq?: string;
            /** @description 备注 */
            remark?: string;
            /**
             * @description 状态
             * @enum {number}
             */
            status?: 0 | 1;
        };
        UserPasswordDto: {
            /** @description 更改后的密码 */
            password: string;
        };
        RoleCreateDto: {
            /** @description 角色名称 */
            name: string;
            /** @description 角色值 */
            value: string;
            /** @description 角色备注 */
            remark?: string;
            /**
             * @description 状态
             * @enum {number}
             */
            status: 0 | 1;
            /** @description 关联菜单、权限编号 */
            menuIds?: number[];
        };
        RoleUpdateDto: {
            /** @description 角色名称 */
            name?: string;
            /** @description 角色值 */
            value?: string;
            /** @description 角色备注 */
            remark?: string;
            /**
             * @description 状态
             * @enum {number}
             */
            status?: 0 | 1;
            /** @description 关联菜单、权限编号 */
            menuIds?: number[];
        };
        MenuDto: {
            /**
             * @description 菜单类型
             * @enum {string}
             */
            type: "ACCESS" | "MENU" | "CATALOG";
            /** @description 父级菜单 */
            parentId: number;
            /** @description 菜单或权限名称 */
            name: string;
            /** @description 排序 */
            sort: number;
            /** @description 前端路由地址 */
            path: string;
            /**
             * @description 菜单是否显示
             * @default 1
             * @enum {number}
             */
            show: 0 | 1;
            /**
             * @description 状态
             * @default 1
             * @enum {number}
             */
            status: 0 | 1;
            /** @description 菜单图标 */
            icon?: string;
            /** @description 对应权限 */
            permission: string;
            /** @description 菜单路由路径或外链 */
            component?: string;
        };
        MenuUpdateDto: {
            /**
             * @description 菜单类型
             * @enum {string}
             */
            type?: "ACCESS" | "MENU" | "CATALOG";
            /** @description 父级菜单 */
            parentId?: number;
            /** @description 菜单或权限名称 */
            name?: string;
            /** @description 排序 */
            sort?: number;
            /** @description 前端路由地址 */
            path?: string;
            /**
             * @description 菜单是否显示
             * @default 1
             * @enum {number}
             */
            show: 0 | 1;
            /**
             * @description 状态
             * @default 1
             * @enum {number}
             */
            status: 0 | 1;
            /** @description 菜单图标 */
            icon?: string;
            /** @description 对应权限 */
            permission?: string;
            /** @description 菜单路由路径或外链 */
            component?: string;
        };
        LoginLogInfo: {
            /** @description 日志编号 */
            id: number;
            /**
             * @description 登录ip
             * @example 1.1.1.1
             */
            ip: string;
            /** @description 登录地址 */
            address: string;
            /**
             * @description 系统
             * @example Windows 10
             */
            os: string;
            /**
             * @description 浏览器
             * @example Chrome
             */
            browser: string;
            /**
             * @description 登录用户名
             * @example admin
             */
            username: string;
            /**
             * @description 登录时间
             * @example 2023-12-22 16:46:20.333843
             */
            time: string;
        };
        DeptDto: {
            /** @description 部门名称 */
            name: string;
            /** @description 排序编号 */
            sort?: number;
        };
        DictTypeDto: {
            /** @description 字典类型名称 */
            name: string;
            /** @description 字典类型code */
            code: string;
            /** @description 状态 */
            status?: number;
            /** @description 备注 */
            remark?: string;
        };
        OnlineUserInfo: {
            /**
             * @description 登录ip
             * @example 1.1.1.1
             */
            ip: string;
            /** @description 登录地址 */
            address: string;
            /**
             * @description 系统
             * @example Windows 10
             */
            os: string;
            /**
             * @description 浏览器
             * @example Chrome
             */
            browser: string;
            /**
             * @description 登录用户名
             * @example admin
             */
            username: string;
            /**
             * @description 登录时间
             * @example 2023-12-22 16:46:20.333843
             */
            time: string;
            /** @description tokenId */
            tokenId: string;
            /** @description 部门名称 */
            deptName: string;
            /** @description 用户ID */
            uid: number;
            /** @description 是否为当前登录用户 */
            isCurrent: boolean;
            /** @description 不允许踢当前用户或超级管理员下线 */
            disable: boolean;
        };
        KickDto: {
            /** @description tokenId */
            tokenId: string;
        };
        Runtime: {
            /** @description 系统 */
            os: string;
            /** @description 服务器架构 */
            arch: string;
            /** @description Node版本 */
            nodeVersion: string;
            /** @description Npm版本 */
            npmVersion: string;
        };
        CoreLoad: {
            /** @description 当前CPU资源消耗 */
            rawLoad: number;
            /** @description 当前空闲CPU资源 */
            rawLoadIdle: number;
        };
        Cpu: {
            /** @description 制造商 */
            manufacturer: string;
            /** @description 品牌 */
            brand: string;
            /** @description 物理核心数 */
            physicalCores: number;
            /** @description 型号 */
            model: string;
            /** @description 速度 in GHz */
            speed: number;
            /** @description CPU资源消耗 原始滴答 */
            rawCurrentLoad: number;
            /** @description 空闲CPU资源 原始滴答 */
            rawCurrentLoadIdle: number;
            /** @description cpu资源消耗 */
            coresLoad: components["schemas"]["CoreLoad"][];
        };
        Disk: {
            /** @description 磁盘空间大小 (bytes) */
            size: number;
            /** @description 已使用磁盘空间 (bytes) */
            used: number;
            /** @description 可用磁盘空间 (bytes) */
            available: number;
        };
        Memory: {
            /** @description total memory in bytes */
            total: number;
            /** @description 可用内存 */
            available: number;
        };
        ServeStatInfo: {
            /** @description 运行环境 */
            runtime: components["schemas"]["Runtime"];
            /** @description CPU信息 */
            cpu: components["schemas"]["Cpu"];
            /** @description 磁盘信息 */
            disk: components["schemas"]["Disk"];
            /** @description 内存信息 */
            memory: components["schemas"]["Memory"];
        };
        SupplierDto: {
            /** @description 字典类型名称 */
            name: string;
            /** @description 字典类型code */
            code: string;
            /** @description 状态 */
            status?: number;
            /** @description 备注 */
            remark?: string;
        };
        CustomerDto: {
            /** @description 字典类型名称 */
            name: string;
            /** @description 字典类型code */
            code: string;
            /** @description 状态 */
            status?: number;
            /** @description 备注 */
            remark?: string;
        };
        EmployeeDto: {
            /** @description 员工名称 */
            name: string;
            /** @description 员工code */
            code: string;
            /** @description 状态 */
            status?: number;
            /** @description 备注 */
            remark?: string;
        };
        MaterialDto: {
            /** @description 字典类型名称 */
            name: string;
            /** @description 字典类型code */
            code: string;
            /** @description 状态 */
            status?: number;
            /** @description 备注 */
            remark?: string;
        };
        StorageInfo: {
            /** @description 文件ID */
            id: number;
            /** @description 文件名 */
            name: string;
            /** @description 文件扩展名 */
            extName: string;
            /** @description 文件路径 */
            path: string;
            /** @description 文件类型 */
            type: string;
            /** @description 大小 */
            size: string;
            /** @description 上传时间 */
            createdAt: string;
            /** @description 上传者 */
            username: string;
        };
        StorageDeleteDto: {
            /** @description 需要删除的文件ID列表 */
            ids: number[];
        };
        FileUploadDto: {
            /**
             * Format: binary
             * @description 文件
             */
            file: string;
        };
        SFileInfo: {
            /** @description 文件id */
            id: string;
            /**
             * @description 文件类型
             * @enum {string}
             */
            type: "file" | "dir";
            /** @description 文件名称 */
            name: string;
            /**
             * Format: date-time
             * @description 存入时间
             */
            putTime: string;
            /** @description 文件大小, byte单位 */
            fsize: string;
            /** @description 文件的mime-type */
            mimeType: string;
            /** @description 所属目录 */
            belongTo: string;
        };
        SFileList: {
            /** @description 文件列表 */
            list: components["schemas"]["SFileInfo"][];
            /** @description 分页标志，空则代表加载完毕 */
            marker: string;
        };
        MKDirDto: {
            /** @description 文件夹名称 */
            dirName: string;
            /** @description 所属路径 */
            path: string;
        };
        UploadToken: {
            /** @description 上传token */
            token: string;
        };
        SFileInfoDetail: {
            /** @description 文件大小，int64类型，单位为字节（Byte） */
            fsize: number;
            /** @description 文件HASH值 */
            hash: string;
            /** @description 文件MIME类型，string类型 */
            mimeType: string;
            /** @description 文件存储类型，2 表示归档存储，1 表示低频存储，0表示普通存储。 */
            type: number;
            /**
             * Format: date-time
             * @description 文件上传时间
             */
            putTime: string;
            /** @description 文件md5值 */
            md5: string;
            /** @description 上传人 */
            uploader: string;
            /** @description 文件备注 */
            mark: string;
        };
        MarkFileDto: {
            /** @description 文件名 */
            name: string;
            /** @description 文件所在路径 */
            path: string;
            /** @description 备注信息 */
            mark: string;
        };
        RenameDto: {
            /** @description 文件类型 */
            type: string;
            /** @description 更改的名称 */
            toName: string;
            /** @description 原来的名称 */
            name: string;
            /** @description 路径 */
            path: string;
        };
        FileOpItem: {
            /**
             * @description 文件类型
             * @enum {string}
             */
            type: "file" | "dir";
            /** @description 文件名称 */
            name: string;
        };
        DeleteDto: {
            /** @description 需要操作的文件或文件夹 */
            files: components["schemas"]["FileOpItem"][];
            /** @description 所在目录 */
            path: string;
        };
        FileOpDto: {
            /** @description 需要操作的文件或文件夹 */
            files: components["schemas"]["FileOpItem"][];
            /** @description 操作前的目录 */
            originPath: string;
            /** @description 操作后的目录 */
            toPath: string;
        };
        FlowInfo: {
            /** @description 当月的X号 */
            times: number[];
            /** @description 对应天数的耗费流量 */
            datas: number[];
        };
        SpaceInfo: {
            /** @description 当月的X号 */
            times: number[];
            /** @description 对应天数的容量, byte单位 */
            datas: number[];
        };
        OverviewSpaceInfo: {
            /** @description 当前使用容量 */
            spaceSize: number;
            /** @description 当前文件数量 */
            fileSize: number;
            /** @description 当天使用流量 */
            flowSize: number;
            /** @description 当天请求次数 */
            hitSize: number;
            /** @description 流量趋势，从当月1号开始计算 */
            flowTrend: components["schemas"]["FlowInfo"];
            /** @description 容量趋势，从当月1号开始计算 */
            sizeTrend: components["schemas"]["SpaceInfo"];
        };
        IoOrderDto: {
            /** @description 员工名称 */
            orderNumber: string;
            /** @description 单重 */
            sigleWeight: number;
            /** @description 总重 */
            totalWeight: number;
            /** @description 件数 */
            quantity: number;
            /** @description 状态 */
            status: number;
            /** @description 备注 */
            remark?: string;
        };
        ResOp: {
            data: Record<string, never>;
            /** @default 200 */
            code: number;
            /** @default success */
            message: string;
        };
        TreeResult: {
            id: number;
            parentId: number;
            children: string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AuthController_login: {
        parameters: {
            query?: never;
            header: {
                "user-agent": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginToken"];
                };
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: components["schemas"]["LoginToken"];
                    };
                };
            };
        };
    };
    AuthController_register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountController_profile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountInfo"];
                };
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: components["schemas"]["AccountInfo"];
                    };
                };
            };
        };
    };
    AccountController_logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountController_menu: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
        };
    };
    AccountController_permissions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: string[];
                    };
                };
            };
        };
    };
    AccountController_update: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccountUpdateDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AccountController_password: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PasswordUpdateDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_list: {
        parameters: {
            query?: {
                current?: number;
                pageSize?: number;
                /** @description 头像 */
                avatar?: string;
                /**
                 * @description 登录账号
                 * @example admin
                 */
                username?: string;
                /**
                 * @description 登录密码
                 * @example a123456
                 */
                password?: string;
                /** @description 归属角色 */
                roleIds?: number[];
                /**
                 * @description 归属大区
                 * @example 1
                 */
                deptId?: number;
                /**
                 * @description 呢称
                 * @example admin
                 */
                nickname?: string;
                /**
                 * @description 邮箱
                 * @example bqy.dev@qq.com
                 */
                email?: string;
                /** @description 手机号 */
                phone?: string;
                /** @description QQ */
                qq?: string;
                /** @description 备注 */
                remark?: string;
                /**
                 * @description 状态
                 * @example 0
                 */
                status?: 0 | 1;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    UserController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserUpdateDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_password: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPasswordDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RoleController_list: {
        parameters: {
            query?: {
                current?: number;
                pageSize?: number;
                /** @description 角色名称 */
                name?: string;
                /** @description 角色值 */
                value?: string;
                /** @description 角色备注 */
                remark?: string;
                /** @description 状态 */
                status?: 0 | 1;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    RoleController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleCreateDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RoleController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RoleController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleUpdateDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    RoleController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MenuController_list: {
        parameters: {
            query?: {
                /** @description 菜单类型 */
                type?: "ACCESS" | "MENU" | "CATALOG";
                /** @description 父级菜单 */
                parentId?: number;
                /** @description 菜单或权限名称 */
                name?: string;
                /** @description 排序 */
                sort?: number;
                /** @description 前端路由地址 */
                path?: string;
                /** @description 菜单是否显示 */
                show?: 0 | 1;
                /** @description 状态 */
                status?: 0 | 1;
                /** @description 菜单图标 */
                icon?: string;
                /** @description 对应权限 */
                permission?: string;
                /** @description 菜单路由路径或外链 */
                component?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
        };
    };
    MenuController_page: {
        parameters: {
            query?: {
                /** @description 菜单类型 */
                type?: "ACCESS" | "MENU" | "CATALOG";
                /** @description 父级菜单 */
                parentId?: number;
                /** @description 菜单或权限名称 */
                name?: string;
                /** @description 排序 */
                sort?: number;
                /** @description 前端路由地址 */
                path?: string;
                /** @description 菜单是否显示 */
                show?: 0 | 1;
                /** @description 状态 */
                status?: 0 | 1;
                /** @description 菜单图标 */
                icon?: string;
                /** @description 对应权限 */
                permission?: string;
                /** @description 菜单路由路径或外链 */
                component?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
        };
    };
    MenuController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MenuDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MenuController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MenuController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MenuUpdateDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MenuController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MenuController_getPermissions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    LogController_loginLogPage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: {
                            items?: components["schemas"]["LoginLogInfo"][];
                            meta?: {
                                /** @default 0 */
                                itemCount: number;
                                /** @default 0 */
                                totalItems: number;
                                /** @default 0 */
                                itemsPerPage: number;
                                /** @default 0 */
                                totalPages: number;
                                /** @default 0 */
                                currentPage: number;
                            };
                        };
                    };
                };
            };
        };
    };
    DeptController_list: {
        parameters: {
            query?: {
                current?: number;
                pageSize?: number;
                /** @description 部门名称 */
                name?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    DeptController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DeptController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DeptController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeptDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DeptController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictTypeController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 字典类型名称 */
                name: string;
                /** @description 字典类型code */
                code: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    DictTypeController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictTypeController_getAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictTypeController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictTypeController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DictTypeDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictTypeController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictItemController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 字典类型 ID */
                typeId: number;
                /** @description 字典项键名 */
                label?: string;
                /** @description 字典项值 */
                value?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    DictItemController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictItemController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictItemController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DictItemController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    OnlineController_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OnlineUserInfo"][];
                };
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: components["schemas"]["OnlineUserInfo"][];
                    };
                };
            };
        };
    };
    OnlineController_kick: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["KickDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    SseController_sse: {
        parameters: {
            query?: never;
            header: {
                "user-agent": string;
            };
            path: {
                uid: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    ServeController_stat: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServeStatInfo"];
                };
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: components["schemas"]["ServeStatInfo"];
                    };
                };
            };
        };
    };
    SupplierController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 供应商名称 */
                name: string;
                /** @description 供应商code */
                code: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    SupplierController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    SupplierController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    SupplierController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SupplierDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    SupplierController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CustomerController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 客户名称 */
                name: string;
                /** @description 客户code */
                code: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    CustomerController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CustomerController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CustomerController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomerDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CustomerController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EmployeeController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 员工名称 */
                name: string;
                /** @description 员工code */
                code: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    EmployeeController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EmployeeController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EmployeeController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmployeeDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EmployeeController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MaterialController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 客户名称 */
                name: string;
                /** @description 客户code */
                code: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    MaterialController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MaterialController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MaterialController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MaterialDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MaterialController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    StorageController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 文件名 */
                name: string;
                /** @description 文件后缀 */
                extName: string;
                /** @description 文件类型 */
                type: string;
                /** @description 大小 */
                size: string;
                /** @description 上传时间 */
                time: string[];
                /** @description 上传者 */
                username: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResOp"] & {
                        data?: {
                            items?: components["schemas"]["StorageInfo"][];
                            meta?: {
                                /** @default 0 */
                                itemCount: number;
                                /** @default 0 */
                                totalItems: number;
                                /** @default 0 */
                                itemsPerPage: number;
                                /** @default 0 */
                                totalPages: number;
                                /** @default 0 */
                                currentPage: number;
                            };
                        };
                    };
                };
            };
        };
    };
    StorageController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StorageDeleteDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UploadController_upload: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["FileUploadDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    HealthController_checkNetwork: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Health Check is successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example ok */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {} */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
            /** @description The Health Check is not successful */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       },
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    HealthController_checkMemoryHeap: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Health Check is successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example ok */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {} */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
            /** @description The Health Check is not successful */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       },
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    HealthController_checkMemoryRSS: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Health Check is successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example ok */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {} */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
            /** @description The Health Check is not successful */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       },
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    HealthController_checkDisk: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Health Check is successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example ok */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {} */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
            /** @description The Health Check is not successful */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       },
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    NetDiskManageController_list: {
        parameters: {
            query: {
                /** @description 分页标识 */
                marker: string;
                /** @description 当前路径 */
                path: string;
                /** @description 搜索关键字 */
                key?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SFileList"];
                };
            };
        };
    };
    NetDiskManageController_mkdir: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MKDirDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NetDiskManageController_token: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UploadToken"];
                };
            };
        };
    };
    NetDiskManageController_info: {
        parameters: {
            query: {
                /** @description 文件名 */
                name: string;
                /** @description 文件所在路径 */
                path: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SFileInfoDetail"];
                };
            };
        };
    };
    NetDiskManageController_mark: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MarkFileDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NetDiskManageController_download: {
        parameters: {
            query: {
                /** @description 文件名 */
                name: string;
                /** @description 文件所在路径 */
                path: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    NetDiskManageController_rename: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RenameDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NetDiskManageController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NetDiskManageController_cut: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FileOpDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NetDiskManageController_copy: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FileOpDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NetDiskOverviewController_space: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OverviewSpaceInfo"];
                };
            };
        };
    };
    IoOrderController_list: {
        parameters: {
            query: {
                current?: number;
                pageSize?: number;
                /** @description 员工名称 */
                orderNumber: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    IoOrderController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    IoOrderController_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    IoOrderController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IoOrderDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    IoOrderController_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
